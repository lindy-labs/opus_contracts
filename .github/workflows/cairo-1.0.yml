name: Cairo 1.0

on:
  push:
    branches:
      - main
    paths-ignore:
      - "**.md"
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
    paths-ignore:
      - "**.md"

env:
  CAIRO_COMPILER_VERSION: 1.0.0-alpha.7
  ARCHIVE_LINK: https://github.com/starkware-libs/cairo/releases/download/v1.0.0-alpha.7/release-x86_64-unknown-linux-musl.tar.gz
  ARCHIVE_NAME: cairo.zip
  SCARB_INSTALLATION_FOLDER: ./scarb

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Get latest commit hash
        run: |
          echo "SCARB_HASH=$( curl -u "u:${{ github.token }}" https://api.github.com/repos/software-mansion/scarb/git/ref/heads/main | jq .object.sha | tr -d '"' )" >> $GITHUB_ENV

      - name: Checkout
        uses: actions/checkout@v2

      - name: Rust setup
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly-2022-11-03

      - name: Pull dependencies
        run: |
          git clone --depth 1 https://github.com/software-mansion/scarb.git $SCARB_INSTALLATION_FOLDER

      - name: Cache dependencies
        id: cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            **/target
          key: ${{ runner.os }}-cargo-${{ env.SCARB_HASH }}

      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          cargo build --manifest-path=./scarb/Cargo.toml
          echo "$SCARB_INSTALLATION_FOLDER/target/debug" >> $GITHUB_PATH

      - name: Lint Cairo 1.x code
        run: scarb fmt --check --verbose

      - name: Compile Cairo 1.x code
        run: scarb build

      - name: Download Cairo binaries
        run: curl -L -o $ARCHIVE_NAME $ARCHIVE_LINK

      - name: Unzip binaries
        run: tar -xvf $ARCHIVE_NAME

      - name: Add binaries to PATH
        run: echo "./cairo/bin" >> $GITHUB_PATH

      - name: Test Cairo 1.x code in Cairo
        run: cairo-test .
