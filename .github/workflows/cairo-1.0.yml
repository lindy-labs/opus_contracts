name: Cairo 1.0

on:
  push:
    branches:
      - main
    paths-ignore:
      - "**.md"
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
    paths-ignore:
      - "**.md"

env:
  CAIRO_FOLDER: ./cairo
  BUILD_FOLDER: ./target

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Get latest commit hash
        run: |
          echo "CAIRO_HASH=fecc9dc5" >> $GITHUB_ENV

      - name: Checkout
        uses: actions/checkout@v2

      - name: Rust setup
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly-2022-11-03

      # - name: Get cache
      #   id: cache
      #   uses: actions/cache@v3
      #   with:
      #     path: |
      #       ~/.cargo/bin/
      #       ~/.cargo/registry/index/
      #       ~/.cargo/registry/cache/
      #       ~/.cargo/git/db/
      #       **/target
      #       **/cairo
      #     key: ${{ runner.os }}-cairo-${{ env.CAIRO_HASH }}
      #     restore-keys: Linux-cairo-

        # Always pull dependencies to access `corelib`
      - name: Pull dependencies
        shell: bash
        run: |
          if [ -d $CAIRO_FOLDER ]; then
            echo "Cairo directory exists"
            git -C $CAIRO_FOLDER pull
          else
            echo "Cairo directory does not exist"
            git clone https://github.com/starkware-libs/cairo.git $CAIRO_FOLDER
          fi

      # - name: View
      #   run: |
      #     ls -la
      #     ls -la $CAIRO_FOLDER

      - name: Install dependencies
        run: |
          cd $CAIRO_FOLDER && git checkout $CAIRO_HASH && cd -
          cargo build --manifest-path=./cairo/Cargo.toml --target-dir $BUILD_FOLDER/cairo --release --all

      # - name: Save cache
      #   uses: actions/cache/save@v3
      #   with:
      #     path: |
      #       ~/.cargo/bin/
      #       ~/.cargo/registry/index/
      #       ~/.cargo/registry/cache/
      #       ~/.cargo/git/db/
      #       **/target
      #       **/cairo
      #     key: ${{ runner.os }}-cairo-${{ env.CAIRO_HASH }}

      - name: Add Cairo to PATH
        run: echo "$BUILD_FOLDER/cairo/release" >> $GITHUB_PATH

      - name: Lint Cairo 1.x code
        id: lint
        run: cairo-format --recursive --check --print-parsing-errors src/

      # Copy `corelib` to build folder so it can be detected
      - name: Copy `corelib`
        if: ${{ success() || steps.lint.conclusion == 'failure' }}
        run: cp -r $CAIRO_FOLDER/corelib $BUILD_FOLDER/cairo/corelib

      - name: Test Cairo 1.x code in Cairo
        if: ${{ success() || steps.lint.conclusion == 'failure' }}
        run: cairo-test --starknet .
