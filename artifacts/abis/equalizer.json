[
  {
    "type": "impl",
    "name": "IEqualizerImpl",
    "interface_name": "opus::interfaces::IEqualizer::IEqualizer"
  },
  {
    "type": "struct",
    "name": "wadray::wadray::Wad",
    "members": [
      {
        "name": "val",
        "type": "core::integer::u128"
      }
    ]
  },
  {
    "type": "interface",
    "name": "opus::interfaces::IEqualizer::IEqualizer",
    "items": [
      {
        "type": "function",
        "name": "get_allocator",
        "inputs": [],
        "outputs": [
          {
            "type": "core::starknet::contract_address::ContractAddress"
          }
        ],
        "state_mutability": "view"
      },
      {
        "type": "function",
        "name": "set_allocator",
        "inputs": [
          {
            "name": "allocator",
            "type": "core::starknet::contract_address::ContractAddress"
          }
        ],
        "outputs": [],
        "state_mutability": "external"
      },
      {
        "type": "function",
        "name": "allocate",
        "inputs": [],
        "outputs": [],
        "state_mutability": "external"
      },
      {
        "type": "function",
        "name": "equalize",
        "inputs": [],
        "outputs": [
          {
            "type": "wadray::wadray::Wad"
          }
        ],
        "state_mutability": "external"
      },
      {
        "type": "function",
        "name": "normalize",
        "inputs": [
          {
            "name": "yin_amt",
            "type": "wadray::wadray::Wad"
          }
        ],
        "outputs": [
          {
            "type": "wadray::wadray::Wad"
          }
        ],
        "state_mutability": "external"
      }
    ]
  },
  {
    "type": "impl",
    "name": "AccessControlPublic",
    "interface_name": "access_control::access_control::IAccessControl"
  },
  {
    "type": "enum",
    "name": "core::bool",
    "variants": [
      {
        "name": "False",
        "type": "()"
      },
      {
        "name": "True",
        "type": "()"
      }
    ]
  },
  {
    "type": "interface",
    "name": "access_control::access_control::IAccessControl",
    "items": [
      {
        "type": "function",
        "name": "get_roles",
        "inputs": [
          {
            "name": "account",
            "type": "core::starknet::contract_address::ContractAddress"
          }
        ],
        "outputs": [
          {
            "type": "core::integer::u128"
          }
        ],
        "state_mutability": "view"
      },
      {
        "type": "function",
        "name": "has_role",
        "inputs": [
          {
            "name": "role",
            "type": "core::integer::u128"
          },
          {
            "name": "account",
            "type": "core::starknet::contract_address::ContractAddress"
          }
        ],
        "outputs": [
          {
            "type": "core::bool"
          }
        ],
        "state_mutability": "view"
      },
      {
        "type": "function",
        "name": "get_admin",
        "inputs": [],
        "outputs": [
          {
            "type": "core::starknet::contract_address::ContractAddress"
          }
        ],
        "state_mutability": "view"
      },
      {
        "type": "function",
        "name": "get_pending_admin",
        "inputs": [],
        "outputs": [
          {
            "type": "core::starknet::contract_address::ContractAddress"
          }
        ],
        "state_mutability": "view"
      },
      {
        "type": "function",
        "name": "grant_role",
        "inputs": [
          {
            "name": "role",
            "type": "core::integer::u128"
          },
          {
            "name": "account",
            "type": "core::starknet::contract_address::ContractAddress"
          }
        ],
        "outputs": [],
        "state_mutability": "external"
      },
      {
        "type": "function",
        "name": "revoke_role",
        "inputs": [
          {
            "name": "role",
            "type": "core::integer::u128"
          },
          {
            "name": "account",
            "type": "core::starknet::contract_address::ContractAddress"
          }
        ],
        "outputs": [],
        "state_mutability": "external"
      },
      {
        "type": "function",
        "name": "renounce_role",
        "inputs": [
          {
            "name": "role",
            "type": "core::integer::u128"
          }
        ],
        "outputs": [],
        "state_mutability": "external"
      },
      {
        "type": "function",
        "name": "set_pending_admin",
        "inputs": [
          {
            "name": "new_admin",
            "type": "core::starknet::contract_address::ContractAddress"
          }
        ],
        "outputs": [],
        "state_mutability": "external"
      },
      {
        "type": "function",
        "name": "accept_admin",
        "inputs": [],
        "outputs": [],
        "state_mutability": "external"
      }
    ]
  },
  {
    "type": "constructor",
    "name": "constructor",
    "inputs": [
      {
        "name": "admin",
        "type": "core::starknet::contract_address::ContractAddress"
      },
      {
        "name": "shrine",
        "type": "core::starknet::contract_address::ContractAddress"
      },
      {
        "name": "allocator",
        "type": "core::starknet::contract_address::ContractAddress"
      }
    ]
  },
  {
    "type": "event",
    "name": "access_control::access_control::access_control_component::AdminChanged",
    "kind": "struct",
    "members": [
      {
        "name": "old_admin",
        "type": "core::starknet::contract_address::ContractAddress",
        "kind": "data"
      },
      {
        "name": "new_admin",
        "type": "core::starknet::contract_address::ContractAddress",
        "kind": "data"
      }
    ]
  },
  {
    "type": "event",
    "name": "access_control::access_control::access_control_component::NewPendingAdmin",
    "kind": "struct",
    "members": [
      {
        "name": "new_admin",
        "type": "core::starknet::contract_address::ContractAddress",
        "kind": "data"
      }
    ]
  },
  {
    "type": "event",
    "name": "access_control::access_control::access_control_component::RoleGranted",
    "kind": "struct",
    "members": [
      {
        "name": "user",
        "type": "core::starknet::contract_address::ContractAddress",
        "kind": "data"
      },
      {
        "name": "role_granted",
        "type": "core::integer::u128",
        "kind": "data"
      }
    ]
  },
  {
    "type": "event",
    "name": "access_control::access_control::access_control_component::RoleRevoked",
    "kind": "struct",
    "members": [
      {
        "name": "user",
        "type": "core::starknet::contract_address::ContractAddress",
        "kind": "data"
      },
      {
        "name": "role_revoked",
        "type": "core::integer::u128",
        "kind": "data"
      }
    ]
  },
  {
    "type": "event",
    "name": "access_control::access_control::access_control_component::Event",
    "kind": "enum",
    "variants": [
      {
        "name": "AdminChanged",
        "type": "access_control::access_control::access_control_component::AdminChanged",
        "kind": "nested"
      },
      {
        "name": "NewPendingAdmin",
        "type": "access_control::access_control::access_control_component::NewPendingAdmin",
        "kind": "nested"
      },
      {
        "name": "RoleGranted",
        "type": "access_control::access_control::access_control_component::RoleGranted",
        "kind": "nested"
      },
      {
        "name": "RoleRevoked",
        "type": "access_control::access_control::access_control_component::RoleRevoked",
        "kind": "nested"
      }
    ]
  },
  {
    "type": "struct",
    "name": "core::array::Span::<core::starknet::contract_address::ContractAddress>",
    "members": [
      {
        "name": "snapshot",
        "type": "@core::array::Array::<core::starknet::contract_address::ContractAddress>"
      }
    ]
  },
  {
    "type": "struct",
    "name": "wadray::wadray::Ray",
    "members": [
      {
        "name": "val",
        "type": "core::integer::u128"
      }
    ]
  },
  {
    "type": "struct",
    "name": "core::array::Span::<wadray::wadray::Ray>",
    "members": [
      {
        "name": "snapshot",
        "type": "@core::array::Array::<wadray::wadray::Ray>"
      }
    ]
  },
  {
    "type": "event",
    "name": "opus::core::equalizer::equalizer::Allocate",
    "kind": "struct",
    "members": [
      {
        "name": "recipients",
        "type": "core::array::Span::<core::starknet::contract_address::ContractAddress>",
        "kind": "data"
      },
      {
        "name": "percentages",
        "type": "core::array::Span::<wadray::wadray::Ray>",
        "kind": "data"
      },
      {
        "name": "amount",
        "type": "wadray::wadray::Wad",
        "kind": "data"
      }
    ]
  },
  {
    "type": "event",
    "name": "opus::core::equalizer::equalizer::AllocatorUpdated",
    "kind": "struct",
    "members": [
      {
        "name": "old_address",
        "type": "core::starknet::contract_address::ContractAddress",
        "kind": "data"
      },
      {
        "name": "new_address",
        "type": "core::starknet::contract_address::ContractAddress",
        "kind": "data"
      }
    ]
  },
  {
    "type": "event",
    "name": "opus::core::equalizer::equalizer::Equalize",
    "kind": "struct",
    "members": [
      {
        "name": "yin_amt",
        "type": "wadray::wadray::Wad",
        "kind": "data"
      }
    ]
  },
  {
    "type": "event",
    "name": "opus::core::equalizer::equalizer::Normalize",
    "kind": "struct",
    "members": [
      {
        "name": "caller",
        "type": "core::starknet::contract_address::ContractAddress",
        "kind": "key"
      },
      {
        "name": "yin_amt",
        "type": "wadray::wadray::Wad",
        "kind": "data"
      }
    ]
  },
  {
    "type": "event",
    "name": "opus::core::equalizer::equalizer::Event",
    "kind": "enum",
    "variants": [
      {
        "name": "AccessControlEvent",
        "type": "access_control::access_control::access_control_component::Event",
        "kind": "nested"
      },
      {
        "name": "Allocate",
        "type": "opus::core::equalizer::equalizer::Allocate",
        "kind": "nested"
      },
      {
        "name": "AllocatorUpdated",
        "type": "opus::core::equalizer::equalizer::AllocatorUpdated",
        "kind": "nested"
      },
      {
        "name": "Equalize",
        "type": "opus::core::equalizer::equalizer::Equalize",
        "kind": "nested"
      },
      {
        "name": "Normalize",
        "type": "opus::core::equalizer::equalizer::Normalize",
        "kind": "nested"
      }
    ]
  }
]
